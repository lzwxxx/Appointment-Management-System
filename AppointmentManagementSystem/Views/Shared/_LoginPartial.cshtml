@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
    @if (User.Identity.IsAuthenticated)
    {
        var user = await UserManager.GetUserAsync(User);
        if (user != null)
        {
            @if (User.IsInRole("User"))
            {
                <li class="nav-item">
                    <a class="nav-link text-white btn btn-dark my-1 mx-1 border-light" asp-area="" asp-controller="Appointments" asp-action="Index">Dashboard</a>
                </li>
            }
            else if (User.IsInRole("Admin"))
            {
                <li class="nav-item">
                    <a class="nav-link text-white btn btn-dark my-1 mx-1 border-light" asp-area="" asp-controller="Appointments" asp-action="Index">Admin Dashboard</a>
                </li>
            }
            <li class="nav-item">
                <a class="nav-link text-white btn btn-dark my-1 mx-1 border-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Account</a>
            </li>
            <li class="nav-item">
                <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <button type="submit" class="nav-link text-white btn btn-dark my-1 mx-1 border-light">Logout</button>
                </form>
            </li>
        }

    } 
    else
    {
        <li class="nav-item">
            <a class="nav-link text-white btn btn-dark my-1 mx-1 btn border-light" asp-area="Identity" asp-page="/Account/Register">Sign Up</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white btn btn-dark my-1 mx-1 border-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>

